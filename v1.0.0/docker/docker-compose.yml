version: '3.8'

x-bake:
  args:
    BUILDKIT_INLINE_CACHE: 1
  resources:
    memory: 12g
    swap: 2g
    cpus: 9
    cpu-quota: 900000

services:
  jupyter-cpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cpu
      args:
        BUILDKIT_INLINE_CACHE: 1
      # Build-time resource constraints (75% of 16GB RAM and 12 cores)
      x-bake:
        platforms:
          - linux/amd64
        cache-from:
          - type=local,src=.buildx-cache
        cache-to:
          - type=local,dest=.buildx-cache
        resources:
          cpu-quota: 900000    # 9 CPUs (100000 = 1 CPU)
          memory: 12G          # 12GB RAM for build (75% of 16GB)
          swap: 2G             # 2GB swap
    image: ds-workspace-cpu:1.0.0
    container_name: ds-workspace-cpu
    labels:
      maintainer: "bhumukulraj.ds@gmail.com"
      version: "1.0.0"
      description: "Data Science Development Environment - CPU Version"
    deploy:
      resources:
        limits:
          cpus: '9'           # 75% of available CPUs
          memory: ${CONTAINER_MEMORY_LIMIT:-12}G
        reservations:
          cpus: '2'           # Minimum 2 CPUs
          memory: ${CONTAINER_MEMORY_RESERVATION:-4}G
    ports:
      - "8888:8888"
      - "5000:5000"  # MLflow UI
    volumes:
      # Mount only specific directories instead of entire workspace
      - /home/${USER}/Desktop/dsi-host-workspace/projects:/workspace/projects
      - /home/${USER}/Desktop/dsi-host-workspace/.ssh:/home/ds-user-ds/.ssh:ro
      - /home/${USER}/Desktop/dsi-host-workspace/gitconfig/.gitconfig:/home/ds-user-ds/.gitconfig:ro
      - /home/${USER}/Desktop/dsi-host-workspace/mlflow:/workspace/mlflow
      - /home/${USER}/Desktop/dsi-host-workspace/logs/jupyter:/var/log/jupyter
      - /home/${USER}/Desktop/dsi-host-workspace/datasets:/workspace/datasets
    environment:
      - USE_GPU=false
      - JUPYTER_PASSWORD=${JUPYTER_PASSWORD:?JUPYTER_PASSWORD must be set}
      - MLFLOW_TRACKING_URI=sqlite:///workspace/mlflow/mlflow.db
      - TZ=${TZ:-UTC}
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    user: "${UID:-1000}:${GID:-1000}"
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep jupyter-lab > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  jupyter-gpu:
    image: ds-workspace-gpu:1.0.0
    build:
      context: ..
      dockerfile: docker/Dockerfile.gpu
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: ds-workspace-gpu
    user: ds-user-ds
    volumes:
      - ${HOST_WORKSPACE_DIR}/gitconfig/.gitconfig:/home/ds-user-ds/.gitconfig:ro
      - ${HOST_WORKSPACE_DIR}/mlflow:/workspace/mlflow:rw
      - ${HOST_WORKSPACE_DIR}/logs/jupyter:/var/log/jupyter:rw
      - ${HOST_WORKSPACE_DIR}/datasets:/workspace/datasets:rw
      - ${HOST_WORKSPACE_DIR}/projects:/workspace/projects:rw
      - ${HOST_WORKSPACE_DIR}/.ssh:/home/ds-user-ds/.ssh:ro
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics
      - NVIDIA_REQUIRE_CUDA=cuda>=11.8
      - NVIDIA_MEM_MAX_PERCENT=75
      - NVIDIA_GPU_MEM_FRACTION=0.75
      - CUDA_VISIBLE_DEVICES=0
      - USE_GPU=true
      - DISPLAY=${DISPLAY}
      - JUPYTER_PASSWORD=${JUPYTER_PASSWORD}
      - TZ=${TZ}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - "8889:8888"
      - "5001:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

volumes:
  jupyter_logs_cpu:
    driver: local
  jupyter_logs_gpu:
    driver: local
  mlflow_data:
    driver: local